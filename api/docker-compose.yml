services:
  postgresdb:
    image: postgres
    restart: always
    # env_file: .env
    ports:
      - 54320:5432
    volumes:
      - ./db:/var/lib/postgres/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
  # Use localstack to emulate the AWS services
  localqueue:
    image: localstack/localstack
    ports:
      - 4566:4566
      - 4510-4559:4510-4559
    environment:
      - DEBUG=1
    # Pass the script for a localstack hook
    volumes:
      - "./.bin/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh"
    healthcheck:
      test: >-
        awslocal sqs list-queues
      interval: 5s
      timeout: 5s
      retries: 3
  endpoint:
    build:
      context: .
      dockerfile: Dockerfile
      target: server_api
    container_name: api-endpoint
    restart: always
    # env_file: .env
    ports:
      - 8080:8080
    healthcheck:
      test: wget --no-verbose -O /dev/null --tries=1 http://0.0.0.0:8080/healthcheck || exit 1
      interval: 3s
      timeout: 7s
      retries: 3
    depends_on:
      postgresdb:
        condition: service_healthy
      localqueue:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: server_worker
    container_name: api-worker
    restart: always
    # env_file: .env
    depends_on:
      postgresdb:
        condition: service_healthy
      localqueue:
        condition: service_healthy
      endpoint:
        condition: service_healthy
